# -*- coding: utf-8 -*-
"""
Created on Wed Feb 12 12:19:55 2025

@author: GVC
"""
from team_code import train_model
import os
import shutil



# Definir las carpetas de origen
path_code15 = r'D:\challenge2025gi\code15_wfdb'
path_samitrop = r'D:\challenge2025gi\Samitrop\samitrop_output'
path_ptbxl = r'D:\challenge2025gi\PTBXL'

# Definir la carpeta temporal para almacenar los registros combinados
temp_data_folder = r'D:\challenge2025gi\temp_data'

# Crear la carpeta temporal si no existe
os.makedirs(temp_data_folder, exist_ok=True)

# Función para copiar los archivos de una carpeta a otra
def copy_records_to_temp_folder(source_folder, destination_folder):
    print(f"Copiando desde {source_folder}...")
    for root, _, files in os.walk(source_folder):
        for file in files:
            # Verificar las extensiones de archivo
            if file.endswith(('.dat', '.hea')):  # Puedes agregar más extensiones si es necesario
                file_path = os.path.join(root, file)
                shutil.copy(file_path, destination_folder)
    print(f"Copiado completo desde {source_folder}.")

# Copiar los registros de Code15
copy_records_to_temp_folder(path_code15, temp_data_folder)

# Copiar los registros de Samitrop
copy_records_to_temp_folder(path_samitrop, temp_data_folder)

# Copiar los registros de PTBXL, iterando sobre las subcarpetas
for subfolder in os.listdir(path_ptbxl):
    subfolder_path = os.path.join(path_ptbxl, subfolder)
    if os.path.isdir(subfolder_path):
        print(f"Copiando desde {subfolder_path}...")
        copy_records_to_temp_folder(subfolder_path, temp_data_folder)

# Verificar que los archivos se copiaron correctamente a la carpeta temporal
files_in_temp_folder = os.listdir(temp_data_folder)
print(f"Archivos en la carpeta temporal: {files_in_temp_folder}")

# Si la carpeta de datos no tiene registros, lanzar una excepción
if len(files_in_temp_folder) == 0:
    raise FileNotFoundError("No data were provided. Verifica si los archivos existen en las carpetas de origen.")

# Ahora puedes usar el data_folder para el entrenamiento
model_folder = r'D:\challenge2025gi'
temp_data_folder=r'D:\challenge2025gi\temp_data'

# Aquí iría el código para entrenar el modelo
try:
    
    train_model(temp_data_folder, model_folder, verbose=True)
except FileNotFoundError:
    print("Error: No se encontraron datos en la carpeta de entrada. Verifica que los archivos existan en temp_data_folder.")

